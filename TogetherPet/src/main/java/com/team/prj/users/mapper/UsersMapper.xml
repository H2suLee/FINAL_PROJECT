<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.prj.users.mapper.UsersMapper">
	<select id="usersSelectList"
		resultType="com.team.prj.users.service.UsersVO">
		SELECT * FROM USERS
	</select>

	<!-- 주문 내역 불러오기 -->
	<select id="orderList"
		parameterType="com.team.prj.goods.service.GoodsVO"
		resultType="com.team.prj.orders.service.OrderVO">
		select o.order_no, g.thumb, g.name, o.money, o.amount, o.pay, o.delivery_state, o.dt
		from orders o, goods g
		where o.goods_no = g.goods_no
		and o.user_no = #{userNo}
		order by order_no desc
	</select>
	
	<!-- 반품 신청 폼에 주문 내역 불러오기 -->
	<select id="orderCanList"
		parameterType="com.team.prj.goods.service.GoodsVO"
		resultType="com.team.prj.orders.service.OrderVO">
		select o.order_no, g.thumb, g.name, o.money, o.amount, o.pay, o.delivery_state, o.dt
		from orders o, goods g
		where o.goods_no = g.goods_no
		and o.order_no = #{orderNo}
		order by order_no desc
	</select>

	<!-- 장바구니 내역 조회 -->
	<select id="cartList"
		resultType="com.team.prj.cart.service.CartVO">
		select *
		from goods g, cart c
		where g.goods_no = c.goods_no
		and c.user_no = #{userNo}
	</select>

	<!-- 수강 내역 조회 -->
	<select id="classList"
		parameterType="com.team.prj.tutor.service.TutorVO"
		resultType="com.team.prj.classreserve.service.ClassReserveVO">
		select cr.class_name as className, t.name as name, cr.dt as dt,
				c.address as address, cr.pay_yn as pay, u.user_no, c.class_no
		from class_reserve cr, tutor t, users u, class c
		where cr.user_no = u.user_no
		and cr.class_name = c.name
		and u.user_no = #{userNo}
	</select>

	<!-- 위시리스트 조회 -->
	<select id="likeList"
		parameterType="com.team.prj.like.service.LikesVO"
		resultType="com.team.prj.classes.service.ClassVO">
		select c.thumb, c.category, c.name, c.address, c.price, c.class_no
		from likes l, class c
		where l.class_no = c.class_no
		and user_no = #{userNo}
	</select>
	
	<!-- 전체 스크랩 리스트 조회 -->
	<select id="scrapList" resultType="com.team.prj.scrap.service.ScrapVO">
		select *
		from scrap
		where user_no = #{userNo}
	</select>
	
	<!-- 작성 글 조회 -->
	<select id="boardList" resultType="com.team.prj.board.service.BoardVO">
		select category, title, TO_DATE(dt, 'YYYY-MM-DD') as dt, likes, hit, board_no
		from board
		where user_no = #{userNo}
		order by board_no desc
	</select>
	
	<!-- 작성 댓글 조회 -->
	<select id="commentList" resultType="com.team.prj.comment.service.CommentVO">
		select *
		from comments
		where user_no = #{userNo}
		order by comment_no desc
	</select>
	
	<!-- 반품 신청 처리 -->
	<insert id="cancelInsert" parameterType="com.team.prj.state.service.StateVO">
		insert into state
		values(#{orderNo},
				'1',
				sysdate,
				#{cancelCfDt},
				#{changeDt},
				#{changeCfDt},
				#{cancel},
				#{cancelDetail},
				#{cancelSel},
				#{cancelAccount},
				#{cancelAccountNum},
				#{change},
				#{changeDetail})
	</insert>	

	<!-- 사진 불러오기 -->
	<select id="photoList"
		parameterType="com.team.prj.goods.service.GoodsVO"
		resultType="com.team.prj.photo.service.PhotoVO">
		select *
		from photo
		where group_no = #{groupNo}
		and name = '리스트'
	</select>

	<!-- 회원 조회 -->
	<select id="usersSelect"
		parameterType="com.team.prj.users.service.UsersVO"
		resultType="com.team.prj.users.service.UsersVO">
		SELECT *
		FROM USERS
		WHERE user_no = #{userNo}
	</select>

	<!-- 회원 등록 -->
	<insert id="usersInsert"
		parameterType="com.team.prj.users.service.UsersVO">
		<selectKey keyProperty="userNo" order="BEFORE"
			resultType="int">
			SELECT
			CASE WHEN max(user_no) IS NULL
			THEN 1
			ELSE
			max(user_no) + 1
			END AS no
			FROM users
		</selectKey>

		INSERT INTO USERS
		VALUES(#{userNo}
		,#{id}
		,#{password}
		,#{name}
		,#{nickname}
		,#{email}
		,#{call}
		,#{address}
		,'USER'
		,3000
		,1
		,SYSDATE
		,'1')
	</insert>

	<!-- 회원 수정 -->
	<update id="usersUpdate"
		parameterType="com.team.prj.users.service.UsersVO">
		UPDATE USERS
		<set>
			<if test="nickname != null">nickname = #{nickname},</if>
			<if test="password != null">password = #{password},</if>
			<if test="email != null">email = #{email},</if>
			<if test="call != null">call = #{call},</if>
			<if test="address != null">address = #{address}</if>
		</set>
		WHERE user_no = #{userNo}
	</update>

	<!-- 회원 삭제 -->
	<delete id="usersDelete">
		DELETE FROM USERS WHERE user_no = #{userNo}
	</delete>

</mapper>